<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.mappers.crewReplyMapper">

	<insert id="insertReply">
		INSERT INTO crew_reply (cr_num
							 , crew_num
							 , user_id
							 , cr_content
							 , cr_date
							 , cr_parent
							 , cr_depth
							 , cr_order
							 ) 
						VALUES (#{crNum}
							 , #{crewNum}
							 , #{userId}
							 , #{crContent}
							 , #{crDate}
							 , #{crParent}
							 , #{crDepth}
							 , #{crOrder}
							 )
	</insert>

	<update id="updateAddOrder">
		UPDATE crew_reply 
		   SET cr_order = cr_order + 1
		 WHERE cr_num = #{crNum}
	</update>
	
	<update id="updateSubOrder">
		UPDATE crew_reply 
		   SET cr_order = cr_order - 1
		 WHERE cr_num = #{crNum}
	</update>

	<select id="getMaxNum" resultType="java.lang.Integer">
		SELECT max(cr_num)
		  FROM crew_reply
	</select>
	
	<select id="getReplyList" resultType="com.itwillbs.domain.CrewReplyDTO">
		WITH RECURSIVE cte AS 
			(SELECT cr_num
				  , crew_num
				  , user_id
				  , cr_content
				  , cr_date
				  , cr_parent
				  , cr_depth
				  , cr_order
				  , @rn:=(@rn+1) AS pnum
		       FROM (SELECT *
				   	   FROM crew_reply 
				      ORDER BY cr_num ASC) t1,
				    (SELECT @rn:=0) t2
					  WHERE cr_parent = 0
                        AND crew_num = #{crewNum}
		UNION ALL
			SELECT c.cr_num
				 , c.crew_num
				 , concat(' ㄴ ', c.user_id)
				 , c.cr_content AS content
				 , c.cr_date
				 , c.cr_parent
			     , c.cr_depth
   				 , c.cr_order
				 , p.pnum AS pnum 
			  FROM crew_reply c INNER JOIN cte p
				ON p.cr_num = c.cr_parent)
			SELECT *
			  FROM cte ORDER BY pnum, cr_depth
<!-- 			  limit #{startRow}, #{pageSize} -->
	</select>
	
	<!-- 페이징된 리스트,, 안 쓸 듯,,, -->
	<select id="getReplyListTest" resultType="com.itwillbs.domain.CrewReplyDTO">
		WITH RECURSIVE cte AS 
			(SELECT cr_num
				  , crew_num
				  , user_id
				  , cr_content
				  , cr_date
				  , cr_parent
				  , cr_depth
				  , @rn:=(@rn+1) AS pnum
		       FROM (SELECT *
				   	   FROM crew_reply 
				      ORDER BY cr_num ASC) t1,
				    (SELECT @rn:=0) t2
					  WHERE cr_parent = 0
                        AND crew_num = 1
		UNION ALL
			SELECT c.cr_num
				 , c.crew_num
				 , concat(' ㄴ ', c.user_id)
				 , c.cr_content AS content
				 , c.cr_date
				 , c.cr_parent
			     , c.cr_depth
				 , p.pnum AS pnum 
			  FROM crew_reply c INNER JOIN cte p
				ON p.cr_num = c.cr_parent)
			SELECT *
			  FROM cte ORDER BY pnum, cr_depth limit #{startRow}, #{pageSize}
	</select>
	
	<select id="getReply" resultType="com.itwillbs.domain.CrewReplyDTO">
		SELECT *
		  FROM crew_reply
		 WHERE cr_num = #{crNum}
	</select>
	
	<select id="getReplyCount" resultType="java.lang.Integer">
		SELECT count(*)
		  FROM crew_reply
		 WHERE crew_num = #{crewNum}
	</select>
	

	<update id="updateReply">
		UPDATE crew_reply
		   SET cr_content = #{crContent}
		 WHERE cr_num = #{crNum}
	</update>
	
	<!-- 자식이 없는 부모 댓글 or 부모 댓글 삭제 -->
	<delete id="deleteReply">
		DELETE FROM crew_reply
		 WHERE cr_num = #{crNum}
	</delete>
	
	<!-- 자식이 있는 부모 댓글 crContent update-->
	<update id="tmpDeleteReply">
		UPDATE crew_reply
		   SET cr_content = ""
		 WHERE cr_num = #{crNum}
	</update>
	

</mapper>